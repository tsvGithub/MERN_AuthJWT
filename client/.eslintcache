[{"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\index.js":"1","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\App.js":"2","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Context\\AuthContext.js":"3","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Services\\AuthService.js":"4","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Navbar.js":"5","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Home.js":"6","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Login.js":"7","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Message.js":"8","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Register.js":"9","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Todos.js":"10","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\TodoItem.js":"11","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Services\\TodoService.js":"12","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Admin.js":"13","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\hocs\\PrivateRoute.js":"14","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\hocs\\UnPrivateRoute.js":"15"},{"size":419,"mtime":1608302150042,"results":"16","hashOfConfig":"17"},{"size":1289,"mtime":1608486542255,"results":"18","hashOfConfig":"17"},{"size":1838,"mtime":1608302238176,"results":"19","hashOfConfig":"17"},{"size":2804,"mtime":1608475866419,"results":"20","hashOfConfig":"17"},{"size":2508,"mtime":1608305653844,"results":"21","hashOfConfig":"17"},{"size":147,"mtime":1607795462758,"results":"22","hashOfConfig":"17"},{"size":2518,"mtime":1636982691792,"results":"23","hashOfConfig":"17"},{"size":579,"mtime":1608472980264,"results":"24","hashOfConfig":"17"},{"size":2905,"mtime":1608474314975,"results":"25","hashOfConfig":"17"},{"size":2780,"mtime":1608476831286,"results":"26","hashOfConfig":"17"},{"size":131,"mtime":1607936495866,"results":"27","hashOfConfig":"17"},{"size":1232,"mtime":1608475922809,"results":"28","hashOfConfig":"17"},{"size":156,"mtime":1608484241515,"results":"29","hashOfConfig":"17"},{"size":1845,"mtime":1608486497369,"results":"30","hashOfConfig":"17"},{"size":906,"mtime":1608487032910,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1fdq861",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\index.js",[],["67","68"],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\App.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Context\\AuthContext.js",["69"],"import React, { createContext, useEffect, useState } from \"react\";\r\nimport AuthService from \"../Services/AuthService\";\r\n\r\n//2\r\nexport const AuthContext = createContext();\r\n\r\n//it will be used in (3)index.js <AuthProvider>\r\n//children===App.js component that we wrap the provider around\r\nexport default ({ children }) => {\r\n  //user===user that is logged in\r\n  const [user, setUser] = useState(null);\r\n  //isAuthenticated===if this user is authenticated or not\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  //isLoaded is boolean value to see if the app is loaded\r\n  //once we get the data => isLoaded===true\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //use AuthService func (1d) isAuthenticated\r\n    AuthService.isAuthenticated()\r\n      //get back data\r\n      .then((data) => {\r\n        setIsLoaded(true);\r\n        //set state\r\n        setUser(data.user);\r\n        //-----------------------\r\n        // (BE 4b routes->login)//if user is logged in\r\n        //isAuthenticated() added by Passport by default\r\n        //returns boolean (true/false)\r\n        //isAuthenticated: true because the user is successfully logged in\r\n        // {isAuthenticated: true,\r\n        ////send back user with username and role\r\n        //   user: { username, role },}------------------------\r\n        setIsAuthenticated(data.isAuthenticated);\r\n        //\r\n        setIsLoaded(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLoaded ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        //provide 'global state' user, setUser, isAuthenticated, setIsAuthenticated\r\n        //to children===components\r\n        <AuthContext.Provider value={{ user, setUser, isAuthenticated, setIsAuthenticated }}>\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Services\\AuthService.js",["70"],"//contain fetch request through endpoints that\r\n//created in BE\r\n//AuthService will store fetch\r\n//1\r\n//Object contains a buch of convenience functions:\r\nexport default {\r\n  //----------------------------------\r\n  // 1a\r\n  //func login takes a user\r\n  login: (user) => {\r\n    console.log(user);\r\n    //configuration for fetch:\r\n    return fetch(\r\n      //endpoint\r\n      \"/user/login\",\r\n      //options\r\n      {\r\n        //post request\r\n        method: \"post\",\r\n        //body need send as JSON => convert to JSON\r\n        //pass in a user\r\n        body: JSON.stringify(user),\r\n        //headers let BE to know what is sending\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n      //promise returns a response\r\n    ).then((res) => {\r\n      //\r\n      if (res.status !== 401) {\r\n        //get data that parsed now\r\n        return res.json().then((data) => data);\r\n      }\r\n      //if not authorized\r\n      else {\r\n        //return false & empty strings for user\r\n        return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\r\n      }\r\n    });\r\n  },\r\n  //------------------------------------\r\n  //1b\r\n  register: (user) => {\r\n    console.log(user);\r\n    return fetch(\"/user/register\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  //---------------------------------------\r\n  //1c\r\n  logout: () => {\r\n    return fetch(\"/user/logout\")\r\n      .then((res) => res.json())\r\n      .then((data) => data);\r\n  },\r\n  //------------------------------------------\r\n  //1d\r\n  //to persist authentication === сохранить аутентификацию\r\n  //once user is logeed in we set a state within\r\n  //REACT Component to let App know that user has\r\n  //been authenticated.\r\n  //When you closte React app that state is gone.\r\n  //So isAuthenticated syncs BE & FE together\r\n  isAuthenticated: () => {\r\n    return (\r\n      fetch(\"/user/authenticated\")\r\n        //\r\n        .then((res) => {\r\n          // if authentication fails, Passport will respond with a 401 Unauthorized status,\r\n          //and any additional route handlers will not be invoked.\r\n          //If authentication succeeds, the next handler will be invoked and the\r\n          //req.user property will be set to the authenticated user.\r\n          if (res.status !== 401) return res.json().then((data) => data);\r\n          //if passport is sending 401 status code:\r\n          else {\r\n            //set authentication to false, as user is unauthorized\r\n            //set user object to empty string\r\n            return { isAuthenticated: false, user: { username: \"\", role: \"\" } };\r\n          }\r\n        })\r\n    );\r\n  },\r\n};\r\n","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Navbar.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Home.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Login.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Message.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Register.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Todos.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\TodoItem.js",[],["71","72"],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Services\\TodoService.js",["73"],"//contain fetch request through endpoints that\r\n//created in BE\r\n//TodoService will store fetch\r\n//10\r\n//Object contains a buch of convenience functions:\r\nexport default {\r\n  //10a get all todos\r\n  getTodos: () => {\r\n    return fetch(\"/user/todos\").then((response) => {\r\n      //if user is authorized\r\n      if (response.status !== 401) {\r\n        //get todos\r\n        return response.json().then((data) => data);\r\n        //if not authorized\r\n      } else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\r\n    });\r\n  },\r\n  //10b create a new todo\r\n  postTodo: (todo) => {\r\n    return fetch(\r\n      //endpoint\r\n      \"/user/todo\",\r\n      //options\r\n      {\r\n        //post request\r\n        method: \"post\",\r\n        //stringify todo (convert into JSON)\r\n        body: JSON.stringify(todo),\r\n        //specify that is JSON\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      //if authorized\r\n      if (response.status !== 401) {\r\n        //get data that parsed now\r\n        return response.json().then((data) => data);\r\n        //if not authorized\r\n      } else return { message: { msgBody: \"UnAuthorized\" }, msgError: true };\r\n    });\r\n  },\r\n};\r\n","C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\Components\\Admin.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\hocs\\PrivateRoute.js",[],"C:\\Users\\Tatja\\Documents\\HTML_CSS_JavaScript\\MERN\\MERN_AuthJWT\\client\\src\\hocs\\UnPrivateRoute.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":9,"column":1,"nodeType":"80","endLine":53,"endColumn":3},{"ruleId":"78","severity":1,"message":"81","line":6,"column":1,"nodeType":"80","endLine":90,"endColumn":3},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","severity":1,"message":"81","line":6,"column":1,"nodeType":"80","endLine":43,"endColumn":3},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default",["84"],["85"],"no-global-assign","no-unsafe-negation"]